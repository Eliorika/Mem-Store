version: "3.8"

networks:
  backend:

services:
  core:
    container_name: application_container
    image: application_image
    depends_on:
      - rabbitmq
      - postgres
      - minio
      - filter
    build:
      context: .
    restart: on-failure
    env_file:
      - .env.docker
    environment:
      POSTGRES_DB_URL: ${POSTGRES_DB_URL}
      POSTGRES_DB_USER: ${POSTGRES_DB_USER}
      POSTGRES_DB_PASSWORD: ${POSTGRES_DB_PASSWORD}
      RABBIT_HOST: ${RABBIT_HOST}
      RABBIT_USERNAME: ${RABBIT_USERNAME}
      RABBIT_PASSWORD: ${RABBIT_PASSWORD}
      RABBIT_PORT: ${RABBIT_PORT}
      FILTER_QUEUE: ${FILTER_QUEUE}
      FILTER_EXCHANGE: ${FILTER_EXCHANGE}
      S3_URL: ${S3_URL}
      FILTER_BASEURL: ${FILTER_BASEURL}
    ports:
      - "8080:8080"
    networks:
      - backend

  filter:
    container_name: filter_container
    image: brashram/filter_image
    depends_on:
      - rabbitmq
      - postgres
    restart: on-failure
    env_file:
      - .env.docker
    ports:
      - "8081:8081"
    environment:
      DB_URL: ${POSTGRES_DB_URL}
      DB_USERNAME: ${POSTGRES_DB_USER}
      DB_PASSWORD: ${POSTGRES_DB_PASSWORD}
      RABBIT_HOST: ${RABBIT_HOST}
      RABBIT_USERNAME: ${RABBIT_USERNAME}
      RABBIT_PASSWORD: ${RABBIT_PASSWORD}
      RABBIT_PORT: ${RABBIT_PORT}
      FILTER_QUEUE: ${FILTER_QUEUE}
      FILTER_EXCHANGE: ${FILTER_EXCHANGE}
      TIME_UPDATE_SIMILARITY: ${TIME_UPDATE_SIMILARITY}
      TIME_UPDATE_FILTER: ${TIME_UPDATE_FILTER}
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    restart: on-failure
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=qwerty
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq
    env_file:
      - .env.docker
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - backend

  postgres:
    container_name: meme-store-postgres
    image: postgres:13-alpine
    restart: on-failure
    env_file:
      - .env.docker
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}
    ports:
      - "5500:5432"
    volumes:
      - ./volumes/dbdata:/var/lib/postgresql/data
    networks:
      - backend

  minio:
    image: minio/minio:latest
    container_name: meme-store-minio
    restart: on-failure
    env_file:
      - .env.docker
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    command: server ~/minio --console-address :9090
    ports:
      - '9090:9090'
      - '9000:9000'
    volumes:
      - ./volumes/minio-data:/minio
    networks:
      - backend

volumes:
  dbdata:
    driver: local
  minio-data:
    driver: local